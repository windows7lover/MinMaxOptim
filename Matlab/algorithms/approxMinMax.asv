function [optimMeter, x, y] = approxMinMax(finfo, nIter, param)

[dim_x, dim_y, L_x, L_y, mu_x, mu_y, L_xy, f, gx, gy, x0, y0] = unpackFinfo(finfo);

optimMeter = OptimMeter(finfo, x0, y0, 'approxMinMax');

alpha = 2/(mu_x+L_x);
beta = 0.5*min([1/L_y ; sqrt(mu_x)/(L_xy*sqrt(L_y))]);

x = x0;
y = y0;

xstar = x0;
ystar = y0;

numberGradientCall = 0;

factor_w = 0.1;

hx = factor_w/(L_x + L_xy^2/mu_y);
hy = factor_w/(L_y + L_xy^2/mu_x);

Lyapunov = @(x,y,xstar, ystar) f(x,ystar)-f(xstar,y)+norm(gx(x,ystar))^2/mu_x+norm(gx(xstar,y))^2/mu_y;


while numberGradientCall<nIter
    
    
    Lyapunov(x,y,xstar, ystar)
    
    delta_w = @(xplus) f(xplus,ystar)-f(x,ystar) + (norm(gy(xplus,ystar))^2-norm(gy(x,ystar))^2)/(2*mu_y);
    xplus = x - hx*gx(x,ystar); numberGradientCall = numberGradientCall+1;
    
    while delta_w(xplus) > factor_w * (-0.5 * norm(gx(x,ystar))^2)*hx
        ystar = ystar + gy(x,ystar)/L_y; numberGradientCall = numberGradientCall+1;
        xplus = x - hx*gx(x,ystar); numberGradientCall = numberGradientCall+1;
%         [norm(gy(x,ystar)) delta_w(xplus) - factor_w * (-0.5 * norm(gx(x,ystar))^2)*hx]
    end
    x = xplus;
    
    Lyapunov(x,y,xstar, ystar)
    
    
    delta_w = @(xplus) f(xplus,ystar)-f(x,ystar) + (norm(gy(xplus,ystar))^2-norm(gy(x,ystar))^2)/(2*mu_y);
    delta_v = @(yplus) -f(xstar,yplus)+f(xstar,y) + (norm(gx(xstar,yplus))^2-norm(gy(xstar,y))^2)/(2*mu_x);
    yplus = y + hy*gy(xstar,y); numberGradientCall = numberGradientCall+1;
    
    while delta_v(yplus) > factor_w * (-0.5 * norm(gy(xstar,y))^2)*hy
        xstar = yxstar - gx(xstar,y)/L_x; numberGradientCall = numberGradientCall+1;
        yplus = y + hy*gy(xstar,y); numberGradientCall = numberGradientCall+1;
    end
    y = yplus;
    
    Lyapunov(x,y,xstar, ystar)
    pause
    
    optimMeter = optimMeter.store(x, y, numberGradientCall);
    
end