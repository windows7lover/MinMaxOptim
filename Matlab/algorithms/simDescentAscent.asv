function [optimMeter, x, y] = simDescentAscent(finfo, nIter, param)

[dim_x, dim_y, L_x, L_y, mu_x, mu_y, L_xy, f, gx, gy, x0, y0] = unpackFinfo(finfo);

optimMeter = OptimMeter(finfo, x0, y0, 'sim-GDA');

alpha = 2*mu_x/(L_x+L_xy^2);
beta = 2*mu_y/(L_y+L_xy^2);

x = x0;
y = y0;

for i=1:nIter
    
    gradx = gx(x,y);
    grady = gy(x,y);
    
    x = x - alpha*gradx;
    y = y + beta*grady;
    
    optimMeter = optimMeter.store(x, y, i);
    
end